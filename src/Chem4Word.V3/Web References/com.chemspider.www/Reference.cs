//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Chem4Word.com.chemspider.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InChISoap", Namespace="http://www.chemspider.com/")]
    public partial class InChI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InChIToInChIKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InChIKeyToInChIOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMILESToInChIOperationCompleted;
        
        private System.Threading.SendOrPostCallback InChIToSMILESOperationCompleted;
        
        private System.Threading.SendOrPostCallback MolToInChIOperationCompleted;
        
        private System.Threading.SendOrPostCallback InChIToMolOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidInChIKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MolToInChIKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InChIKeyToMolOperationCompleted;
        
        private System.Threading.SendOrPostCallback CSIDToMolOperationCompleted;
        
        private System.Threading.SendOrPostCallback InChIKeyToCSIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InChIToCSIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateInChIInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateInChIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateInChIKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveInChIKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InChI() {
            this.Url = global::Chem4Word.Properties.Settings.Default.Chem4Word_com_chemspider_www_InChI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InChIToInChIKeyCompletedEventHandler InChIToInChIKeyCompleted;
        
        /// <remarks/>
        public event InChIKeyToInChICompletedEventHandler InChIKeyToInChICompleted;
        
        /// <remarks/>
        public event SMILESToInChICompletedEventHandler SMILESToInChICompleted;
        
        /// <remarks/>
        public event InChIToSMILESCompletedEventHandler InChIToSMILESCompleted;
        
        /// <remarks/>
        public event MolToInChICompletedEventHandler MolToInChICompleted;
        
        /// <remarks/>
        public event InChIToMolCompletedEventHandler InChIToMolCompleted;
        
        /// <remarks/>
        public event IsValidInChIKeyCompletedEventHandler IsValidInChIKeyCompleted;
        
        /// <remarks/>
        public event MolToInChIKeyCompletedEventHandler MolToInChIKeyCompleted;
        
        /// <remarks/>
        public event InChIKeyToMolCompletedEventHandler InChIKeyToMolCompleted;
        
        /// <remarks/>
        public event CSIDToMolCompletedEventHandler CSIDToMolCompleted;
        
        /// <remarks/>
        public event InChIKeyToCSIDCompletedEventHandler InChIKeyToCSIDCompleted;
        
        /// <remarks/>
        public event InChIToCSIDCompletedEventHandler InChIToCSIDCompleted;
        
        /// <remarks/>
        public event GenerateInChIInfoCompletedEventHandler GenerateInChIInfoCompleted;
        
        /// <remarks/>
        public event GenerateInChICompletedEventHandler GenerateInChICompleted;
        
        /// <remarks/>
        public event GenerateInChIKeyCompletedEventHandler GenerateInChIKeyCompleted;
        
        /// <remarks/>
        public event ResolveInChIKeyCompletedEventHandler ResolveInChIKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/InChIToInChIKey", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InChIToInChIKey(string inchi) {
            object[] results = this.Invoke("InChIToInChIKey", new object[] {
                        inchi});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InChIToInChIKeyAsync(string inchi) {
            this.InChIToInChIKeyAsync(inchi, null);
        }
        
        /// <remarks/>
        public void InChIToInChIKeyAsync(string inchi, object userState) {
            if ((this.InChIToInChIKeyOperationCompleted == null)) {
                this.InChIToInChIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInChIToInChIKeyOperationCompleted);
            }
            this.InvokeAsync("InChIToInChIKey", new object[] {
                        inchi}, this.InChIToInChIKeyOperationCompleted, userState);
        }
        
        private void OnInChIToInChIKeyOperationCompleted(object arg) {
            if ((this.InChIToInChIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InChIToInChIKeyCompleted(this, new InChIToInChIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/InChIKeyToInChI", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InChIKeyToInChI(string inchi_key) {
            object[] results = this.Invoke("InChIKeyToInChI", new object[] {
                        inchi_key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InChIKeyToInChIAsync(string inchi_key) {
            this.InChIKeyToInChIAsync(inchi_key, null);
        }
        
        /// <remarks/>
        public void InChIKeyToInChIAsync(string inchi_key, object userState) {
            if ((this.InChIKeyToInChIOperationCompleted == null)) {
                this.InChIKeyToInChIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInChIKeyToInChIOperationCompleted);
            }
            this.InvokeAsync("InChIKeyToInChI", new object[] {
                        inchi_key}, this.InChIKeyToInChIOperationCompleted, userState);
        }
        
        private void OnInChIKeyToInChIOperationCompleted(object arg) {
            if ((this.InChIKeyToInChICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InChIKeyToInChICompleted(this, new InChIKeyToInChICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/SMILESToInChI", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMILESToInChI(string smiles) {
            object[] results = this.Invoke("SMILESToInChI", new object[] {
                        smiles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMILESToInChIAsync(string smiles) {
            this.SMILESToInChIAsync(smiles, null);
        }
        
        /// <remarks/>
        public void SMILESToInChIAsync(string smiles, object userState) {
            if ((this.SMILESToInChIOperationCompleted == null)) {
                this.SMILESToInChIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMILESToInChIOperationCompleted);
            }
            this.InvokeAsync("SMILESToInChI", new object[] {
                        smiles}, this.SMILESToInChIOperationCompleted, userState);
        }
        
        private void OnSMILESToInChIOperationCompleted(object arg) {
            if ((this.SMILESToInChICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMILESToInChICompleted(this, new SMILESToInChICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/InChIToSMILES", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InChIToSMILES(string inchi) {
            object[] results = this.Invoke("InChIToSMILES", new object[] {
                        inchi});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InChIToSMILESAsync(string inchi) {
            this.InChIToSMILESAsync(inchi, null);
        }
        
        /// <remarks/>
        public void InChIToSMILESAsync(string inchi, object userState) {
            if ((this.InChIToSMILESOperationCompleted == null)) {
                this.InChIToSMILESOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInChIToSMILESOperationCompleted);
            }
            this.InvokeAsync("InChIToSMILES", new object[] {
                        inchi}, this.InChIToSMILESOperationCompleted, userState);
        }
        
        private void OnInChIToSMILESOperationCompleted(object arg) {
            if ((this.InChIToSMILESCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InChIToSMILESCompleted(this, new InChIToSMILESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/MolToInChI", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MolToInChI(string mol) {
            object[] results = this.Invoke("MolToInChI", new object[] {
                        mol});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MolToInChIAsync(string mol) {
            this.MolToInChIAsync(mol, null);
        }
        
        /// <remarks/>
        public void MolToInChIAsync(string mol, object userState) {
            if ((this.MolToInChIOperationCompleted == null)) {
                this.MolToInChIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMolToInChIOperationCompleted);
            }
            this.InvokeAsync("MolToInChI", new object[] {
                        mol}, this.MolToInChIOperationCompleted, userState);
        }
        
        private void OnMolToInChIOperationCompleted(object arg) {
            if ((this.MolToInChICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MolToInChICompleted(this, new MolToInChICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/InChIToMol", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InChIToMol(string inchi) {
            object[] results = this.Invoke("InChIToMol", new object[] {
                        inchi});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InChIToMolAsync(string inchi) {
            this.InChIToMolAsync(inchi, null);
        }
        
        /// <remarks/>
        public void InChIToMolAsync(string inchi, object userState) {
            if ((this.InChIToMolOperationCompleted == null)) {
                this.InChIToMolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInChIToMolOperationCompleted);
            }
            this.InvokeAsync("InChIToMol", new object[] {
                        inchi}, this.InChIToMolOperationCompleted, userState);
        }
        
        private void OnInChIToMolOperationCompleted(object arg) {
            if ((this.InChIToMolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InChIToMolCompleted(this, new InChIToMolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/IsValidInChIKey", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidInChIKey(string inchi_key) {
            object[] results = this.Invoke("IsValidInChIKey", new object[] {
                        inchi_key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidInChIKeyAsync(string inchi_key) {
            this.IsValidInChIKeyAsync(inchi_key, null);
        }
        
        /// <remarks/>
        public void IsValidInChIKeyAsync(string inchi_key, object userState) {
            if ((this.IsValidInChIKeyOperationCompleted == null)) {
                this.IsValidInChIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidInChIKeyOperationCompleted);
            }
            this.InvokeAsync("IsValidInChIKey", new object[] {
                        inchi_key}, this.IsValidInChIKeyOperationCompleted, userState);
        }
        
        private void OnIsValidInChIKeyOperationCompleted(object arg) {
            if ((this.IsValidInChIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidInChIKeyCompleted(this, new IsValidInChIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/MolToInChIKey", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MolToInChIKey(string mol) {
            object[] results = this.Invoke("MolToInChIKey", new object[] {
                        mol});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MolToInChIKeyAsync(string mol) {
            this.MolToInChIKeyAsync(mol, null);
        }
        
        /// <remarks/>
        public void MolToInChIKeyAsync(string mol, object userState) {
            if ((this.MolToInChIKeyOperationCompleted == null)) {
                this.MolToInChIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMolToInChIKeyOperationCompleted);
            }
            this.InvokeAsync("MolToInChIKey", new object[] {
                        mol}, this.MolToInChIKeyOperationCompleted, userState);
        }
        
        private void OnMolToInChIKeyOperationCompleted(object arg) {
            if ((this.MolToInChIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MolToInChIKeyCompleted(this, new MolToInChIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/InChIKeyToMol", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InChIKeyToMol(string inchi_key) {
            object[] results = this.Invoke("InChIKeyToMol", new object[] {
                        inchi_key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InChIKeyToMolAsync(string inchi_key) {
            this.InChIKeyToMolAsync(inchi_key, null);
        }
        
        /// <remarks/>
        public void InChIKeyToMolAsync(string inchi_key, object userState) {
            if ((this.InChIKeyToMolOperationCompleted == null)) {
                this.InChIKeyToMolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInChIKeyToMolOperationCompleted);
            }
            this.InvokeAsync("InChIKeyToMol", new object[] {
                        inchi_key}, this.InChIKeyToMolOperationCompleted, userState);
        }
        
        private void OnInChIKeyToMolOperationCompleted(object arg) {
            if ((this.InChIKeyToMolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InChIKeyToMolCompleted(this, new InChIKeyToMolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/CSIDToMol", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CSIDToMol(string csid, string token) {
            object[] results = this.Invoke("CSIDToMol", new object[] {
                        csid,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CSIDToMolAsync(string csid, string token) {
            this.CSIDToMolAsync(csid, token, null);
        }
        
        /// <remarks/>
        public void CSIDToMolAsync(string csid, string token, object userState) {
            if ((this.CSIDToMolOperationCompleted == null)) {
                this.CSIDToMolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCSIDToMolOperationCompleted);
            }
            this.InvokeAsync("CSIDToMol", new object[] {
                        csid,
                        token}, this.CSIDToMolOperationCompleted, userState);
        }
        
        private void OnCSIDToMolOperationCompleted(object arg) {
            if ((this.CSIDToMolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CSIDToMolCompleted(this, new CSIDToMolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/InChIKeyToCSID", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InChIKeyToCSID(string inchi_key) {
            object[] results = this.Invoke("InChIKeyToCSID", new object[] {
                        inchi_key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InChIKeyToCSIDAsync(string inchi_key) {
            this.InChIKeyToCSIDAsync(inchi_key, null);
        }
        
        /// <remarks/>
        public void InChIKeyToCSIDAsync(string inchi_key, object userState) {
            if ((this.InChIKeyToCSIDOperationCompleted == null)) {
                this.InChIKeyToCSIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInChIKeyToCSIDOperationCompleted);
            }
            this.InvokeAsync("InChIKeyToCSID", new object[] {
                        inchi_key}, this.InChIKeyToCSIDOperationCompleted, userState);
        }
        
        private void OnInChIKeyToCSIDOperationCompleted(object arg) {
            if ((this.InChIKeyToCSIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InChIKeyToCSIDCompleted(this, new InChIKeyToCSIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/InChIToCSID", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InChIToCSID(string inchi) {
            object[] results = this.Invoke("InChIToCSID", new object[] {
                        inchi});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InChIToCSIDAsync(string inchi) {
            this.InChIToCSIDAsync(inchi, null);
        }
        
        /// <remarks/>
        public void InChIToCSIDAsync(string inchi, object userState) {
            if ((this.InChIToCSIDOperationCompleted == null)) {
                this.InChIToCSIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInChIToCSIDOperationCompleted);
            }
            this.InvokeAsync("InChIToCSID", new object[] {
                        inchi}, this.InChIToCSIDOperationCompleted, userState);
        }
        
        private void OnInChIToCSIDOperationCompleted(object arg) {
            if ((this.InChIToCSIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InChIToCSIDCompleted(this, new InChIToCSIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/GenerateInChIInfo", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GenerateInChIInfo(string str, ChemicalFormat format, InChIFlags flags) {
            object[] results = this.Invoke("GenerateInChIInfo", new object[] {
                        str,
                        format,
                        flags});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GenerateInChIInfoAsync(string str, ChemicalFormat format, InChIFlags flags) {
            this.GenerateInChIInfoAsync(str, format, flags, null);
        }
        
        /// <remarks/>
        public void GenerateInChIInfoAsync(string str, ChemicalFormat format, InChIFlags flags, object userState) {
            if ((this.GenerateInChIInfoOperationCompleted == null)) {
                this.GenerateInChIInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateInChIInfoOperationCompleted);
            }
            this.InvokeAsync("GenerateInChIInfo", new object[] {
                        str,
                        format,
                        flags}, this.GenerateInChIInfoOperationCompleted, userState);
        }
        
        private void OnGenerateInChIInfoOperationCompleted(object arg) {
            if ((this.GenerateInChIInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateInChIInfoCompleted(this, new GenerateInChIInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/GenerateInChI", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateInChI(string str, ChemicalFormat format, InChIFlags flags) {
            object[] results = this.Invoke("GenerateInChI", new object[] {
                        str,
                        format,
                        flags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateInChIAsync(string str, ChemicalFormat format, InChIFlags flags) {
            this.GenerateInChIAsync(str, format, flags, null);
        }
        
        /// <remarks/>
        public void GenerateInChIAsync(string str, ChemicalFormat format, InChIFlags flags, object userState) {
            if ((this.GenerateInChIOperationCompleted == null)) {
                this.GenerateInChIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateInChIOperationCompleted);
            }
            this.InvokeAsync("GenerateInChI", new object[] {
                        str,
                        format,
                        flags}, this.GenerateInChIOperationCompleted, userState);
        }
        
        private void OnGenerateInChIOperationCompleted(object arg) {
            if ((this.GenerateInChICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateInChICompleted(this, new GenerateInChICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/GenerateInChIKey", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateInChIKey(string str, ChemicalFormat format, InChIFlags flags) {
            object[] results = this.Invoke("GenerateInChIKey", new object[] {
                        str,
                        format,
                        flags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateInChIKeyAsync(string str, ChemicalFormat format, InChIFlags flags) {
            this.GenerateInChIKeyAsync(str, format, flags, null);
        }
        
        /// <remarks/>
        public void GenerateInChIKeyAsync(string str, ChemicalFormat format, InChIFlags flags, object userState) {
            if ((this.GenerateInChIKeyOperationCompleted == null)) {
                this.GenerateInChIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateInChIKeyOperationCompleted);
            }
            this.InvokeAsync("GenerateInChIKey", new object[] {
                        str,
                        format,
                        flags}, this.GenerateInChIKeyOperationCompleted, userState);
        }
        
        private void OnGenerateInChIKeyOperationCompleted(object arg) {
            if ((this.GenerateInChIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateInChIKeyCompleted(this, new GenerateInChIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/ResolveInChIKey", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ResolveInChIKey(string inchi_key, ChemicalFormat out_format) {
            object[] results = this.Invoke("ResolveInChIKey", new object[] {
                        inchi_key,
                        out_format});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ResolveInChIKeyAsync(string inchi_key, ChemicalFormat out_format) {
            this.ResolveInChIKeyAsync(inchi_key, out_format, null);
        }
        
        /// <remarks/>
        public void ResolveInChIKeyAsync(string inchi_key, ChemicalFormat out_format, object userState) {
            if ((this.ResolveInChIKeyOperationCompleted == null)) {
                this.ResolveInChIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveInChIKeyOperationCompleted);
            }
            this.InvokeAsync("ResolveInChIKey", new object[] {
                        inchi_key,
                        out_format}, this.ResolveInChIKeyOperationCompleted, userState);
        }
        
        private void OnResolveInChIKeyOperationCompleted(object arg) {
            if ((this.ResolveInChIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveInChIKeyCompleted(this, new ResolveInChIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.chemspider.com/")]
    public enum ChemicalFormat {
        
        /// <remarks/>
        MOL,
        
        /// <remarks/>
        SDF,
        
        /// <remarks/>
        SMILES,
        
        /// <remarks/>
        InChI,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.chemspider.com/")]
    public partial class InChIFlags {
        
        private InChIVersion versionField;
        
        private InChIStereo stereoField;
        
        private bool fixedHField;
        
        /// <remarks/>
        public InChIVersion version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public InChIStereo stereo {
            get {
                return this.stereoField;
            }
            set {
                this.stereoField = value;
            }
        }
        
        /// <remarks/>
        public bool fixedH {
            get {
                return this.fixedHField;
            }
            set {
                this.fixedHField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.chemspider.com/")]
    public enum InChIVersion {
        
        /// <remarks/>
        v102b,
        
        /// <remarks/>
        v102s,
        
        /// <remarks/>
        v103,
        
        /// <remarks/>
        v104,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.chemspider.com/")]
    public enum InChIStereo {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Absolute,
        
        /// <remarks/>
        Relative,
        
        /// <remarks/>
        Racemic,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InChIToInChIKeyCompletedEventHandler(object sender, InChIToInChIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InChIToInChIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InChIToInChIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InChIKeyToInChICompletedEventHandler(object sender, InChIKeyToInChICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InChIKeyToInChICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InChIKeyToInChICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SMILESToInChICompletedEventHandler(object sender, SMILESToInChICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMILESToInChICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMILESToInChICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InChIToSMILESCompletedEventHandler(object sender, InChIToSMILESCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InChIToSMILESCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InChIToSMILESCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MolToInChICompletedEventHandler(object sender, MolToInChICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MolToInChICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MolToInChICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InChIToMolCompletedEventHandler(object sender, InChIToMolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InChIToMolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InChIToMolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsValidInChIKeyCompletedEventHandler(object sender, IsValidInChIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidInChIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidInChIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MolToInChIKeyCompletedEventHandler(object sender, MolToInChIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MolToInChIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MolToInChIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InChIKeyToMolCompletedEventHandler(object sender, InChIKeyToMolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InChIKeyToMolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InChIKeyToMolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CSIDToMolCompletedEventHandler(object sender, CSIDToMolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CSIDToMolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CSIDToMolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InChIKeyToCSIDCompletedEventHandler(object sender, InChIKeyToCSIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InChIKeyToCSIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InChIKeyToCSIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InChIToCSIDCompletedEventHandler(object sender, InChIToCSIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InChIToCSIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InChIToCSIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GenerateInChIInfoCompletedEventHandler(object sender, GenerateInChIInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateInChIInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateInChIInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GenerateInChICompletedEventHandler(object sender, GenerateInChICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateInChICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateInChICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GenerateInChIKeyCompletedEventHandler(object sender, GenerateInChIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateInChIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateInChIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ResolveInChIKeyCompletedEventHandler(object sender, ResolveInChIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveInChIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveInChIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591